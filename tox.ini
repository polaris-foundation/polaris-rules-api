[tox]
skipsdist = True
envlist = lint,py39
source_package = dhos_rules_api
all_sources = {[tox]source_package} tests/ integration-tests/

[flake8]
max-line-length = 100

[pytest]
filterwarnings =
    ignore::DeprecationWarning:jose

[testenv]
envdir = {toxworkdir}/py39
setenv = REDIS_INSTALLED = False
         RABBITMQ_NOENCRYPT = TRUE
         ENVIRONMENT = DEVELOPMENT
         IGNORE_JWT_VALIDATION = True
         AUTH0_AUDIENCE=https://dev.sensynehealth.com/
         PROXY_URL = http://localhost/
         HS_KEY = secret
         DHOS_RULES_ENGINE_URL = http://dhos-rules-engine
         LOG_FORMAT = COLOUR
         LOG_LEVEL = DEBUG
         FLASK_APP={[tox]source_package}/autoapp.py
         DHOS_TRUSTOMER_API_HOST=http://dhos-trustomer
         CUSTOMER_CODE=test
         POLARIS_API_KEY=secret

commands = poetry install -v
           black --check {[tox]source_package} tests/
           isort --profile black {[tox]source_package} tests/ --check-only
           mypy {[tox]source_package}
           bandit -r dhos_rules_api -lll
           safety check
           coverage run --source dhos_rules_api -m py.test {posargs}
           coverage report
           coverage xml -i -o coverage-reports/coverage.xml
allowlist_externals =
        bandit
        black
        coverage
        isort
        npx
        mypy
        poetry
        python
        safety
        sh
        true
list_dependencies_command = true


[testenv:lint]
description = Run black, isort, and mypy to clean up source files
commands =
       black {[tox]all_sources}
       isort --profile black {[tox]all_sources}
       mypy {[tox]source_package} tests/

[testenv:debug]
description = Run last failing unit test and invoke debugger on errors
commands =
    pytest --lf --pdb

[testenv:update]
description = Update poetry lock files
commands = poetry update

[testenv:openapi]
description = Recreate API specification (openapi.yaml) from Flask blueprint
commands =
    poetry install
    python -m flask create-openapi {toxinidir}/{[tox]source_package}/openapi/openapi.yaml
    npx markdown-swagger {toxinidir}/{[tox]source_package}/openapi/openapi.yaml {toxinidir}/README.md
